{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavprasad/Desktop/ai-face-detection/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useEffect } from 'react';\nimport './App.css';\nimport * as faceapi from \"face-api.js\";\nimport { FaceExpressions } from 'face-api.js';\nimport $ from 'jquery'; // new faceapi.TinyFaceDetectorOptions()\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  var express = require('express');\n\n  const querystring = require('querystring');\n\n  var client_id = 'CLIENT_ID';\n  var client_Secret = '9fba64c6a89d45539af2fe64ac3fc37c';\n  var redirect_uri = 'http://localhost:3001/';\n  var app = express();\n  app.get('/login', function (req, res) {\n    var state = generateRandomString(16);\n    var scope = 'user-read-private user-read-email';\n    res.redirect('https://accounts.spotify.com/authorize?' + querystring.stringify({\n      response_type: 'code',\n      client_id: client_id,\n      scope: scope,\n      redirect_uri: redirect_uri,\n      state: state\n    }));\n  });\n  app.get('/callback', function (req, res) {\n    var code = req.query.code || null;\n    var state = req.query.state || null;\n\n    if (state === null) {\n      res.redirect('/#' + querystring.stringify({\n        error: 'state_mismatch'\n      }));\n    } else {\n      var authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        form: {\n          code: code,\n          redirect_uri: redirect_uri,\n          grant_type: 'authorization_code'\n        },\n        headers: {\n          'Authorization': 'Basic ' + new Buffer(client_id + ':' + client_secret).toString('base64')\n        },\n        json: true\n      };\n    }\n\n    console.log(res);\n  });\n  let number = 0;\n  const videoRef = useRef();\n  const canvasRef = useRef();\n  useEffect(() => {\n    startVideo();\n    videoRef && loadModels();\n  }, []);\n\n  const loadModels = () => {\n    Promise.all([faceapi.nets.tinyFaceDetector.loadFromUri('/models'), faceapi.nets.faceLandmark68Net.loadFromUri('/models'), faceapi.nets.faceRecognitionNet.loadFromUri('/models'), faceapi.nets.faceExpressionNet.loadFromUri('/models')]).then(() => {\n      faceDetection();\n    });\n  };\n\n  const startVideo = () => {\n    navigator.mediaDevices.getUserMedia({\n      video: true\n    }).then(currentStream => {\n      videoRef.current.srcObject = currentStream;\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  const faceDetection = async () => {\n    setInterval(async () => {\n      if (number == 1) {\n        return;\n      }\n\n      const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n      let emotions_displayed = detections[0].expressions;\n\n      if (emotions_displayed != undefined) {\n        number++;\n      }\n\n      let max_emotion = 0;\n      let final_emotion = \"\";\n\n      for (const [key, value] of Object.entries(emotions_displayed)) {\n        if (value > max_emotion) {\n          max_emotion = value;\n          final_emotion = key;\n        }\n      }\n\n      console.log(final_emotion + ':' + max_emotion);\n      canvasRef.current.innerHtml = faceapi.createCanvasFromMedia(videoRef.current);\n      faceapi.matchDimensions(canvasRef.current, {\n        width: 940,\n        height: 650\n      });\n      const resized = faceapi.resizeResults(detections, {\n        width: 940,\n        height: 650\n      });\n      faceapi.draw.drawDetections(canvasRef.current, resized);\n      faceapi.draw.drawFaceLandmarks(canvasRef.current, resized);\n      faceapi.draw.drawFaceExpressions(canvasRef.current, resized);\n      let number_of_playlists = 5;\n      let selected_playlist = Math.floor(Math.random() * number_of_playlists); // fetch(\"https://api.spotify.com/v1/search?q=\" + final_emotion + \"&type=playlist&limit=5\", {\n      //   method: 'GET',\n      // })\n      // fetch(\"https://api.spotify.com/v1/search?q=\" + final_emotion + \"&type=playlist&limit=5\")\n\n      $.get(\"https://api.spotify.com/v1/search?q=\" + final_emotion + \"&type=playlist&limit=5\", function (data) {\n        console.log(data); // playlist = data.playlists.items[selectedPlaylist].external_urls.spotify;\n        // window.open(playlist, '_blank');\n      });\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" AI FACE DETECTION\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__video\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        crossOrigin: \"anonymous\",\n        ref: videoRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"940\",\n      height: \"650\",\n      className: \"app__canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0gwqVvoOV2or9Ql4L8GH2BGn3hc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abhinavprasad/Desktop/ai-face-detection/src/App.js"],"names":["useRef","useEffect","faceapi","FaceExpressions","$","App","express","require","querystring","client_id","client_Secret","redirect_uri","app","get","req","res","state","generateRandomString","scope","redirect","stringify","response_type","code","query","error","authOptions","url","form","grant_type","headers","Buffer","client_secret","toString","json","console","log","number","videoRef","canvasRef","startVideo","loadModels","Promise","all","nets","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","then","faceDetection","navigator","mediaDevices","getUserMedia","video","currentStream","current","srcObject","catch","err","setInterval","detections","detectAllFaces","TinyFaceDetectorOptions","withFaceLandmarks","withFaceExpressions","emotions_displayed","expressions","undefined","max_emotion","final_emotion","key","value","Object","entries","innerHtml","createCanvasFromMedia","matchDimensions","width","height","resized","resizeResults","draw","drawDetections","drawFaceLandmarks","drawFaceExpressions","number_of_playlists","selected_playlist","Math","floor","random","data"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,MAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,QAAMC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAA3B;;AAEA,MAAIE,SAAS,GAAG,WAAhB;AACA,MAAIC,aAAa,GAAG,kCAApB;AACA,MAAIC,YAAY,GAAG,wBAAnB;AACA,MAAIC,GAAG,GAAGN,OAAO,EAAjB;AAEAM,EAAAA,GAAG,CAACC,GAAJ,CAAQ,QAAR,EAAkB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAEnC,QAAIC,KAAK,GAAGC,oBAAoB,CAAC,EAAD,CAAhC;AACA,QAAIC,KAAK,GAAG,mCAAZ;AAEAH,IAAAA,GAAG,CAACI,QAAJ,CAAa,4CACXX,WAAW,CAACY,SAAZ,CAAsB;AACpBC,MAAAA,aAAa,EAAE,MADK;AAEpBZ,MAAAA,SAAS,EAAEA,SAFS;AAGpBS,MAAAA,KAAK,EAAEA,KAHa;AAIpBP,MAAAA,YAAY,EAAEA,YAJM;AAKpBK,MAAAA,KAAK,EAAEA;AALa,KAAtB,CADF;AAQD,GAbD;AAeAJ,EAAAA,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAEtC,QAAIO,IAAI,GAAGR,GAAG,CAACS,KAAJ,CAAUD,IAAV,IAAkB,IAA7B;AACA,QAAIN,KAAK,GAAGF,GAAG,CAACS,KAAJ,CAAUP,KAAV,IAAmB,IAA/B;;AAEA,QAAIA,KAAK,KAAK,IAAd,EAAoB;AAClBD,MAAAA,GAAG,CAACI,QAAJ,CAAa,OACXX,WAAW,CAACY,SAAZ,CAAsB;AACpBI,QAAAA,KAAK,EAAE;AADa,OAAtB,CADF;AAID,KALD,MAKO;AACL,UAAIC,WAAW,GAAG;AAChBC,QAAAA,GAAG,EAAE,wCADW;AAEhBC,QAAAA,IAAI,EAAE;AACJL,UAAAA,IAAI,EAAEA,IADF;AAEJX,UAAAA,YAAY,EAAEA,YAFV;AAGJiB,UAAAA,UAAU,EAAE;AAHR,SAFU;AAOhBC,QAAAA,OAAO,EAAE;AACP,2BAAiB,WAAY,IAAIC,MAAJ,CAAWrB,SAAS,GAAG,GAAZ,GAAkBsB,aAA7B,EAA4CC,QAA5C,CAAqD,QAArD;AADtB,SAPO;AAUhBC,QAAAA,IAAI,EAAE;AAVU,OAAlB;AAYD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAYpB,GAAZ;AACD,GA1BD;AA4BA,MAAIqB,MAAM,GAAG,CAAb;AACA,QAAMC,QAAQ,GAAGrC,MAAM,EAAvB;AACA,QAAMsC,SAAS,GAAGtC,MAAM,EAAxB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdsC,IAAAA,UAAU;AAEVF,IAAAA,QAAQ,IAAIG,UAAU,EAAtB;AAED,GALQ,EAKN,EALM,CAAT;;AAOE,QAAMA,UAAU,GAAG,MAAM;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CACVxC,OAAO,CAACyC,IAAR,CAAaC,gBAAb,CAA8BC,WAA9B,CAA0C,SAA1C,CADU,EAEV3C,OAAO,CAACyC,IAAR,CAAaG,iBAAb,CAA+BD,WAA/B,CAA2C,SAA3C,CAFU,EAGV3C,OAAO,CAACyC,IAAR,CAAaI,kBAAb,CAAgCF,WAAhC,CAA4C,SAA5C,CAHU,EAIV3C,OAAO,CAACyC,IAAR,CAAaK,iBAAb,CAA+BH,WAA/B,CAA2C,SAA3C,CAJU,CAAZ,EAKGI,IALH,CAKQ,MAAM;AACZC,MAAAA,aAAa;AACd,KAPD;AAQD,GATD;;AAWF,QAAMX,UAAU,GAAG,MAAM;AACvBY,IAAAA,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAApC,EACGL,IADH,CACSM,aAAD,IAAmB;AACvBlB,MAAAA,QAAQ,CAACmB,OAAT,CAAiBC,SAAjB,GAA6BF,aAA7B;AACD,KAHH,EAIGG,KAJH,CAIUC,GAAD,IAAS;AACdzB,MAAAA,OAAO,CAACV,KAAR,CAAcmC,GAAd;AACD,KANH;AAOD,GARD;;AAUA,QAAMT,aAAa,GAAG,YAAY;AAChCU,IAAAA,WAAW,CAAC,YAAW;AACrB,UAAIxB,MAAM,IAAE,CAAZ,EACA;AACE;AACD;;AACD,YAAMyB,UAAU,GAAG,MAAM3D,OAAO,CAAC4D,cAAR,CAAuBzB,QAAQ,CAACmB,OAAhC,EAAyC,IAAItD,OAAO,CAAC6D,uBAAZ,EAAzC,EAAgFC,iBAAhF,GAAoGC,mBAApG,EAAzB;AACA,UAAIC,kBAAkB,GAAGL,UAAU,CAAC,CAAD,CAAV,CAAcM,WAAvC;;AACA,UAAID,kBAAkB,IAAIE,SAA1B,EACA;AACEhC,QAAAA,MAAM;AACP;;AACD,UAAIiC,WAAW,GAAG,CAAlB;AACA,UAAIC,aAAa,GAAG,EAApB;;AACA,WAAK,MAAM,CAACC,GAAD,EAAKC,KAAL,CAAX,IAA0BC,MAAM,CAACC,OAAP,CAAeR,kBAAf,CAA1B,EACA;AACE,YAAIM,KAAK,GAAGH,WAAZ,EACA;AACEA,UAAAA,WAAW,GAAGG,KAAd;AACAF,UAAAA,aAAa,GAAGC,GAAhB;AACD;AACF;;AACDrC,MAAAA,OAAO,CAACC,GAAR,CAAYmC,aAAa,GAAG,GAAhB,GAAsBD,WAAlC;AAEA/B,MAAAA,SAAS,CAACkB,OAAV,CAAkBmB,SAAlB,GAA8BzE,OAAO,CAAC0E,qBAAR,CAA8BvC,QAAQ,CAACmB,OAAvC,CAA9B;AACAtD,MAAAA,OAAO,CAAC2E,eAAR,CAAwBvC,SAAS,CAACkB,OAAlC,EAA2C;AACzCsB,QAAAA,KAAK,EAAE,GADkC;AAEzCC,QAAAA,MAAM,EAAE;AAFiC,OAA3C;AAKA,YAAMC,OAAO,GAAG9E,OAAO,CAAC+E,aAAR,CAAsBpB,UAAtB,EAAkC;AAChDiB,QAAAA,KAAK,EAAE,GADyC;AAEhDC,QAAAA,MAAM,EAAE;AAFwC,OAAlC,CAAhB;AAKA7E,MAAAA,OAAO,CAACgF,IAAR,CAAaC,cAAb,CAA4B7C,SAAS,CAACkB,OAAtC,EAA+CwB,OAA/C;AACA9E,MAAAA,OAAO,CAACgF,IAAR,CAAaE,iBAAb,CAA+B9C,SAAS,CAACkB,OAAzC,EAAkDwB,OAAlD;AACA9E,MAAAA,OAAO,CAACgF,IAAR,CAAaG,mBAAb,CAAiC/C,SAAS,CAACkB,OAA3C,EAAoDwB,OAApD;AAEA,UAAIM,mBAAmB,GAAG,CAA1B;AACA,UAAIC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,mBAA3B,CAAxB,CAvCqB,CAyCrB;AACA;AAEA;AAEA;;AAEAlF,MAAAA,CAAC,CAACS,GAAF,CAAM,yCAAyCyD,aAAzC,GAAyD,wBAA/D,EAAyF,UAASqB,IAAT,EAAe;AAC9EzD,QAAAA,OAAO,CAACC,GAAR,CAAYwD,IAAZ,EAD8E,CAE9E;AACA;AACH,OAJvB;AAMD,KAtDU,EAsDR,IAtDQ,CAAX;AAuDD,GAxDD;;AA0DA,sBACE;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAO,QAAA,WAAW,EAAC,WAAnB;AAA+B,QAAA,GAAG,EAAEtD,QAApC;AAA8C,QAAA,QAAQ;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAMI;AAAQ,MAAA,GAAG,EAAEC,SAAb;AAAwB,MAAA,KAAK,EAAC,KAA9B;AAAoC,MAAA,MAAM,EAAC,KAA3C;AAAiD,MAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA1JQjC,G;;KAAAA,G;AA4JT,eAAeA,GAAf","sourcesContent":["import { useRef, useEffect } from 'react';\nimport './App.css';\nimport * as faceapi from \"face-api.js\";\nimport { FaceExpressions } from 'face-api.js';\nimport $ from 'jquery';\n\n// new faceapi.TinyFaceDetectorOptions()\n\nfunction App() {\n\n  var express = require('express');\n  const querystring = require('querystring')\n\n  var client_id = 'CLIENT_ID';\n  var client_Secret = '9fba64c6a89d45539af2fe64ac3fc37c';\n  var redirect_uri = 'http://localhost:3001/';\n  var app = express();\n\n  app.get('/login', function(req, res) {\n\n    var state = generateRandomString(16);\n    var scope = 'user-read-private user-read-email';\n\n    res.redirect('https://accounts.spotify.com/authorize?' +\n      querystring.stringify({\n        response_type: 'code',\n        client_id: client_id,\n        scope: scope,\n        redirect_uri: redirect_uri,\n        state: state\n      }));\n  });\n\n  app.get('/callback', function(req, res) {\n\n    var code = req.query.code || null;\n    var state = req.query.state || null;\n  \n    if (state === null) {\n      res.redirect('/#' +\n        querystring.stringify({\n          error: 'state_mismatch'\n        }));\n    } else {\n      var authOptions = {\n        url: 'https://accounts.spotify.com/api/token',\n        form: {\n          code: code,\n          redirect_uri: redirect_uri,\n          grant_type: 'authorization_code'\n        },\n        headers: {\n          'Authorization': 'Basic ' + (new Buffer(client_id + ':' + client_secret).toString('base64'))\n        },\n        json: true\n      };\n    }\n\n    console.log(res)\n  });\n\n  let number = 0;\n  const videoRef = useRef();\n  const canvasRef = useRef();\n\n  useEffect(() => {\n    startVideo();\n\n    videoRef && loadModels();\n\n  }, []);\n  \n    const loadModels = () => {\n      Promise.all([\n        faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\n        faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\n        faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\n        faceapi.nets.faceExpressionNet.loadFromUri('/models'),\n      ]).then(() => {\n        faceDetection();\n      })\n    };\n\n  const startVideo = () => {\n    navigator.mediaDevices.getUserMedia({ video: true })\n      .then((currentStream) => {\n        videoRef.current.srcObject = currentStream;\n      })\n      .catch((err) => {\n        console.error(err)\n      });\n  }\n\n  const faceDetection = async () => {\n    setInterval(async() => {\n      if (number==1)\n      {\n        return\n      }\n      const detections = await faceapi.detectAllFaces(videoRef.current, new faceapi.TinyFaceDetectorOptions()).withFaceLandmarks().withFaceExpressions();\n      let emotions_displayed = detections[0].expressions;\n      if (emotions_displayed != undefined)\n      {\n        number++;\n      }\n      let max_emotion = 0\n      let final_emotion = \"\"\n      for (const [key,value] of Object.entries(emotions_displayed))\n      {\n        if (value > max_emotion)\n        {\n          max_emotion = value\n          final_emotion = key\n        }\n      }\n      console.log(final_emotion + ':' + max_emotion)\n  \n      canvasRef.current.innerHtml = faceapi.createCanvasFromMedia(videoRef.current);\n      faceapi.matchDimensions(canvasRef.current, {\n        width: 940,\n        height: 650,\n      })\n\n      const resized = faceapi.resizeResults(detections, {\n        width: 940,\n        height: 650,\n      });\n\n      faceapi.draw.drawDetections(canvasRef.current, resized)\n      faceapi.draw.drawFaceLandmarks(canvasRef.current, resized)\n      faceapi.draw.drawFaceExpressions(canvasRef.current, resized)\n\n      let number_of_playlists = 5\n      let selected_playlist = Math.floor(Math.random() * number_of_playlists)\n\n      // fetch(\"https://api.spotify.com/v1/search?q=\" + final_emotion + \"&type=playlist&limit=5\", {\n      //   method: 'GET',\n\n      // })\n\n      // fetch(\"https://api.spotify.com/v1/search?q=\" + final_emotion + \"&type=playlist&limit=5\")\n\n      $.get(\"https://api.spotify.com/v1/search?q=\" + final_emotion + \"&type=playlist&limit=5\", function(data) {\n                                console.log(data)\n                                // playlist = data.playlists.items[selectedPlaylist].external_urls.spotify;\n                                // window.open(playlist, '_blank');\n                            })\n\n    }, 1000)\n  }\n\n  return (\n    <div  className=\"app\">\n      <h1> AI FACE DETECTION</h1>\n      <h1>  </h1>\n      <div className='app__video'>\n        <video crossOrigin='anonymous' ref={videoRef} autoPlay ></video>\n      </div>\n        <canvas ref={canvasRef} width=\"940\" height=\"650\" className='app__canvas' />\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}